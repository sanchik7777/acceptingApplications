import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import ChatJoinRequest
import logging
from background import keep_alive

BOT_TOKEN = '7551027634:AAENbSzLtmERfDRoBccUb0vsuMehvLVjP6g'
CHANNEL_ID = -1002184700377
ADMIN_ID = 7002244661

# –û—á–µ—Ä–µ–¥—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫
queue = asyncio.Queue()

# –°–µ–º–∞—Ñ–æ—Ä –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —á–∏—Å–ª–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –∑–∞—è–≤–æ–∫
semaphore = asyncio.Semaphore(5)  # –ú–∞–∫—Å–∏–º—É–º 5 –∑–∞—è–≤–æ–∫ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ

async def approve_request_worker(bot: Bot):
    """
    –í–æ—Ä–∫–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫ –∏–∑ –æ—á–µ—Ä–µ–¥–∏.
    """
    while True:
        chat_join = await queue.get()
        async with semaphore:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç–æ–∫
            try:
                msg = (
                    "<b>–ó–∞—è–≤–∫–∞ –ø–æ–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</b>\n\n"
                    "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ TikTok. "
                    "–£–¥–µ–ª—è–π –æ—Ç 2 –¥–æ 6 —á–∞—Å–æ–≤ –≤ –Ω–µ–¥–µ–ª—é, —Å–æ–∑–¥–∞–≤–∞—è –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é —Ç–µ–±–µ —Ç–µ–º—É. "
                    "–ü—Ä–∏–±—ã–ª—å 50 –Ω–∞ 50. –ú—ã –Ω–µ –ø—Ä–æ–¥–∞–µ–º –∫—É—Ä—Å—ã, –∞ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é —Å –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏.\n\n"
                    "–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã ‚Äî @tiktok_partners. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è, –ø–∏—à–∏ ‚Äì –º—ã –Ω–µ –∫—É—Å–∞–µ–º—Å—è üòÑ."
                )

                image_url = "https://cdn.discordapp.com/attachments/1224751404711673879/1316872219015774319/Group_4.jpg?ex=675ca053&is=675b4ed3&hm=abf16e15afe9a404e485476b865cc00f60f64ab114d9d1e5ca7338c79a9fd2b3&"

                # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
                await bot.send_photo(
                    chat_id=chat_join.from_user.id,
                    photo=image_url,
                    caption=msg,
                    parse_mode="HTML",
                )
               
                logging.info(f"–ó–∞—è–≤–∫–∞ –æ—Ç {chat_join.from_user.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏: {e}")
                await bot.send_message(
                    chat_id=ADMIN_ID,
                    text=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏ –æ—Ç {chat_join.from_user.id}: {e}",
                )
            finally:
                queue.task_done()  # –£–≤–µ–¥–æ–º–ª—è–µ–º –æ—á–µ—Ä–µ–¥—å –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ

async def handle_new_join_request(chat_join: ChatJoinRequest, bot: Bot):
    """
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ –≤ –æ—á–µ—Ä–µ–¥—å.
    """
    await queue.put(chat_join)
    logging.info(f"–ó–∞—è–≤–∫–∞ –æ—Ç {chat_join.from_user.id} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –æ—á–µ—Ä–µ–¥—å")

async def start():
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s - [%(levelname)s] - %(message)s",
    )

    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∑–∞—è–≤–æ–∫
    dp.chat_join_request.register(handle_new_join_request, F.chat.id == CHANNEL_ID)

    # –ó–∞–ø—É—Å–∫ –≤–æ—Ä–∫–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫
    asyncio.create_task(approve_request_worker(bot))

    try:
        logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –Ω–∞—á–∞–ª polling...")
        await dp.start_polling(bot)
    except Exception as ex:
        logging.error(f"–û—à–∏–±–∫–∞: {ex}")
    finally:
        await bot.session.close()
keep_alive()
if __name__ == "__main__":
    asyncio.run(start())
